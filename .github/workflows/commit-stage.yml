name: Commit Stage
on:
  push:
    paths:
      - 'CatalogService/**'
  pull_request:
    paths:
      - 'CatalogService/**'
env: 
  REGISTRY: docker.io                                   
  IMAGE_NAME: olile11/catalog-service
  VERSION: latest
##jobs que devem ser feitas
jobs:
  ##build de app
  build:
    name: Build and Test
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      security-events: write
    ##etapas
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      ##setup de JDK
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: gradle	
      - name: Build, unit tests and integration tests
        working-directory: CatalogService
        run: |
          chmod +x gradlew                                
          ./gradlew build
      ##checagem de vulnerabilidades
      - name: Code vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          path: "${{ github.workspace }}"
          fail-build: false
          severity-cutoff: high
          acs-report-enable: true
      ##upload de vulnerabilidades
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
  ##empacotamento        
  package:
    name: Package and Publish
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [ build ]
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: gradle
      ##build da imagem candidata a release
      - name: Build container image
        working-directory: CatalogService
        run: |
          chmod +x gradlew
          ./gradlew bootBuildImage --imageName ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
      ##checagem de vulnerabilidade na imagem construida
      - name: OCI image vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          fail-build: false
          severity-cutoff: high
      ##upload de relat√≥rio de vulnerabilidade
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
      ##login no registry  
      - name: Log into container registry
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          logout: true
      - name: Publish container image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}  
       

